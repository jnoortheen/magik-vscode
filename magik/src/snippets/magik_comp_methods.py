# the below two completion types will be called on an object. triggered with a dot
magik_methods = {
    # common methods shorthand expressions
    "ae\tan_element()": "an_element()$0",
    "as_symbol": "as_symbol()$0",
    "fe\tfast_elements": "fast_elements()$0",
    "fk\tfast_keys": "fast_elements()$0",
    "fke\tfast_keys_and_elements": "fast_keys_and_elements()$0",

    # methods on objects
    "ancestor_parents": "ancestor_parents$0",
    "apropos": "apropos(\"$1\", ${2:_true}, ${3:_true})",
    "as_sliced_string": "as_sliced_string(${1:length}, ${2:_true})$0",
    "class_name": "class_name$0",
    "copy": "copy()$0",
    "does_not_understand": "does_not_understand(message,private?)",
    "debug_print_on": "debug_print_on(${1:a_stream})",
    "deep_copy": "deep_copy()$0",
    "default": "default($1)$0",
    "define_metadata": "define_metadata(${1:key},${2:value})",
    "define_show_attributes": "define_show_attributes(${1:_gather} ${2:list})$0",
    "dependents_set": "dependents_set(${1:force_existence?})$0",
    "do_deep_copy": "do_deep_copy()$0",
    "error": "error(${1:_gather} ${2:args})$0",
    "exemplar_global": "exemplar_global$0",
    "global_auto_declare": "!global_auto_declare?! << ${1:_false}\n\\$",
    "has_dependents": "has_dependents?(${1:aspect})",
    "have_post_mortem": "have_post_mortem(${1:yes?})",
    "identity_hash": "identity_hash$0",
    "immediate_children": "immediate_children$0",
    "immediate_parents": "immediate_parents$0",
    "inheriting_children": "inheriting_children$0",
    "inherits_from": "inherits_from?(${1:thing})",
    "is_a_datastore_object": "is_a_datastore_object?$0",
    "is_class_of": "is_class_of?(${1:another})",
    "is_class_or_direct_subclass_of": "is_class_or_direct_subclass_of?(${1:an_object})",
    "is_kind_of": "is_kind_of?(${1:thing})",
    "metadata": "metadata(${1:key})",
    "method\tmethod(name)": "method(${1:name})$0",
    "method_table": "method_table$0",
    "module_name": "module_name$0",
    "naturally_ordered": "naturally_ordered?$0",
    "notify": "notify(${1:all?})",
    "perform": "perform(${1:selector}, $2)$0",
    "perform_message": "perform_message(${1:a_message})",
    "perform_with_vector": "perform_with_vector(${1:selector},${2:arg_vector})",
    "post_mortem": "post_mortem()$0",
    "primitive_failed": "primitive_failed(${1:selector}, ${2:optional condition_values})$0",
    "print_attributes_on": "print_attributes_on(${1:a_stream})",
    "print_string": "print_string$0",
    "product_name": "product_name$0",
    "product_directory": "smallworld_product.product(:${1:product_name}).directory$0",
    "prt": "print($1)$0",
    "putenv": "system.putenv('$1', '$2')$0",
    "remove_method": "remove_method(name)",
    "responds_to": "responds_to?(:|${1:message_name}|, ${2: optional private?})",
    "save_and_replace_method": "sys!save_and_replace_method(${1:method_name}, ${2:new_method_proc_or_value},  ${3:optional private?})",
    "send_error": "sys!send_error(${1:selector}, ${2:method_table}, ${3:private?}, ${4:error}, ${5:args})",
    "shallow_copy": "shallow_copy()$0",
    "show_on": "show_on(${1:a_stream})$0",
    "species": "species$0",
    "too_few_args": "too_few_args(${1:message}, ${2:private?})$0",
    "trace_on": "trace_on(${1:stream}, ${2:optional expand_n})$0",
    "veto_change": "veto_change?(who_wants_to_change,what_to_change,change_info, gather more_change_info)",
    "wait": "wait()$0",
    "write_on": "write_on(${1:a_stream})$0",
    "yourself": "yourself$0",
}